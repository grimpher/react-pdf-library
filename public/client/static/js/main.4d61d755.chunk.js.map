{"version":3,"sources":["redux/actions.js","redux/actionTypes.js","components/LandingPage/FilesList/File/FileDrawer.jsx","components/LandingPage/FilesList/File/index.jsx","components/LandingPage/FilesList/index.jsx","components/LandingPage/FileUpload/index.jsx","components/LandingPage/ProfileDashboard/UserPreferences.jsx","components/LandingPage/ProfileDashboard/index.jsx","components/LandingPage/index.jsx","components/FilePage/index.jsx","components/LoginPage/index.jsx","components/RegisterPage/index.jsx","App.jsx","serviceWorker.js","redux/reducers/files.js","redux/reducers/user.js","redux/reducers/index.js","redux/store.js","index.jsx"],"names":["axios","defaults","baseURL","fetchFilesSuccess","files","type","payload","fetchFiles","dispatch","a","get","then","res","data","Promise","resolve","catch","err","error","reject","deleteFileBegin","fileId","deleteFileSuccess","deleteFileFail","updateFile","newData","patch","updatedFile","loginSuccess","token","headers","common","Paragraph","Typography","FileDrawer","state","isUploadingChanges","inputValues","props","fileInfo","niceName","valuesHasChanged","toggleUploadingState","setState","prevState","onInputChange","e","target","name","value","deleteFile","niceId","message","open","content","icon","style","color","console","log","preventDefault","toggleDetailsDrawer","this","visible","drawerProps","title","width","placement","closable","onClose","popconfirmIcon","fontSize","deleteIcon","className","deleteButton","onConfirm","okType","okText","cancelText","saveButton","loading","onClick","disabled","onSubmit","size","onChange","justify","Component","connect","delete","Title","Text","File","showDetailsDrawer","niceNameInputValue","pagesRead","pagesCount","totalPages","readPercentage","Math","floor","remainingPages","pagesDailyToFinishInWeek","round","fileElement","align","percent","marginRight","level","strong","to","linkAddress","hoverable","FilesList","componentDidMount","user","margin","fontWeight","spinning","isFetching","gutter","map","file","key","allFiles","Dragger","Upload","FileUpload","isUploading","uploadFile","success","render","showUploadList","accept","multiple","customRequest","formData","FormData","append","post","newFile","UserPreferences","newPreferences","preferences","isPushing","componentDidUpdate","prevProps","onChangeSlider","property","newValue","dailyGoals","pushChanges","updateUserPreferences","pages","minutes","Fragment","max","step","htmlType","updateUserPreferencesSuccess","ProfileDashboard","isLoading","currentDate","today","Date","day","getDate","month","getMonth","year","getFullYear","fetchUserInfo","firstName","todayPagesRead","todayMinutesRead","stats","todayStats","dailyGoalsPercentages","logout","marginTop","textAlign","localStorage","removeItem","LandingPage","span","offset","borderRadius","boxShadow","paddingLeft","FilePage","currentPage","lastUpdatedCurrentPage","lastPageChangeTime","getTime","minutesOfReading","match","params","id","fetchFile","window","addEventListener","onMessage","setInterval","timeNow","updateReadPagesCount","didValueChange","dataToUpdate","isNaN","parseInt","path","encodeURI","viewerSrc","height","display","flexDirection","src","border","bind","React","singleFile","fetchSingleFile","LoginPage","emailValue","passwordValue","shouldRedirect","feedbackMessage","loginInProgress","submitLoginForm","includes","login","setTimeout","errMessage","changeInput","loginFeedback","marginBottom","showIcon","Item","prefix","placeholder","email","password","validateStatus","status","RegisterPage","passwordRepeatValue","firstNameValue","registerInProgress","submitRegisterForm","register","registerFeedback","App","readCache","exact","component","getItem","Boolean","location","hostname","initialState","combineReducers","action","reverse","filter","unshift","newList","setItem","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","rootElement","store","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d61d755.chunk.js","sourcesContent":["import { READ_CACHE,\r\n\r\n         FETCH_FILES_BEGIN,\r\n         FETCH_FILES_SUCCESS,\r\n         FETCH_FILES_FAIL,\r\n        \r\n         DELETE_FILE_BEGIN,\r\n         DELETE_FILE_SUCCESS,\r\n         DELETE_FILE_FAIL,\r\n        \r\n         UPLOAD_FILE_BEGIN,\r\n         UPLOAD_FILE_SUCCESS,\r\n         UPLOAD_FILE_FAIL,\r\n        \r\n         UPDATE_FILE_BEGIN,\r\n         UPDATE_FILE_SUCCESS,\r\n         UPDATE_FILE_FAIL,\r\n\r\n         FETCH_SINGLE_FILE_BEGIN,\r\n         FETCH_SINGLE_FILE_SUCCESS,\r\n         FETCH_SINGLE_FILE_FAIL,\r\n         \r\n         LOGIN_BEGIN,\r\n         LOGIN_SUCCESS,\r\n         LOGIN_FAIL,\r\n\r\n         LOGOUT,\r\n         \r\n         REGISTER_BEGIN,\r\n         REGISTER_SUCCESS,\r\n         REGISTER_FAIL,\r\n        \r\n         FETCH_USER_INFO_BEGIN,\r\n         FETCH_USER_INFO_SUCCESS,\r\n         FETCH_USER_INFO_FAIL,\r\n        \r\n         UPDATE_USER_PREFERENCES_BEGIN,\r\n         UPDATE_USER_PREFERENCES_SUCCESS,\r\n         UPDATE_USER_PREFERENCES_FAIL } from './actionTypes'\r\n\r\nimport axios from 'axios'\r\n\r\naxios.defaults.baseURL = 'https://127.0.0.1/api'\r\n\r\n// FETCH FILES\r\nconst fetchFilesBegin = () => ({\r\n  type: FETCH_FILES_BEGIN\r\n})\r\nconst fetchFilesSuccess = (files) => ({\r\n  type: FETCH_FILES_SUCCESS,\r\n  payload: {\r\n    files\r\n  }\r\n})\r\nconst fetchFilesFail = (error) => ({\r\n  type: FETCH_FILES_FAIL,\r\n  payload: {\r\n    error\r\n  }\r\n})\r\n\r\nexport const fetchFiles = () => {\r\n  return async dispatch => {\r\n    dispatch(fetchFilesBegin())\r\n    axios.get('/files')\r\n      .then(res => {\r\n        const files = res.data\r\n        dispatch(fetchFilesSuccess(files))\r\n        Promise.resolve()\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchFilesFail(err))\r\n        Promise.reject(err)\r\n      })\r\n  }\r\n}\r\n\r\n// DELETE FILE\r\nconst deleteFileBegin = (fileId) => ({\r\n  type: DELETE_FILE_BEGIN,\r\n  payload: {\r\n    fileId: fileId\r\n  }\r\n})\r\nconst deleteFileSuccess = (fileId) => ({\r\n  type: DELETE_FILE_SUCCESS,\r\n  payload: {\r\n    fileId: fileId\r\n  }\r\n})\r\nconst deleteFileFail = (fileId) => ({\r\n  type: DELETE_FILE_FAIL,\r\n  payload: {\r\n    fileId: fileId\r\n  }\r\n})\r\n\r\nexport const deleteFile = (fileId) => {\r\n  return async dispatch => {\r\n    dispatch(deleteFileBegin(fileId))\r\n    axios.delete('/files/' + fileId)\r\n      .then(() => {\r\n        dispatch(deleteFileSuccess(fileId))\r\n        Promise.resolve()\r\n      })\r\n      .catch(err => {\r\n        dispatch(deleteFileFail(fileId))\r\n        Promise.reject(err)\r\n      })\r\n  }\r\n}\r\n\r\n// UPLOAD FILE\r\nconst uploadFileBegin = () => ({\r\n  type: UPLOAD_FILE_BEGIN\r\n})\r\nconst uploadFileSuccess = newFile => ({\r\n  type: UPLOAD_FILE_SUCCESS,\r\n  payload: { newFile }\r\n})\r\nconst uploadFileFail = () => ({\r\n  type: UPLOAD_FILE_FAIL\r\n})\r\n\r\nexport const uploadFile = (file) => {\r\n  return async dispatch => {\r\n    dispatch(uploadFileBegin())\r\n    const formData = new FormData()\r\n    formData.append('pdf', file)\r\n    const headers = { 'Content-Type': 'multipart/form-data' }\r\n    axios.post('/files/', formData, { headers })\r\n      .then(res => {\r\n        console.log(res)\r\n        dispatch(uploadFileSuccess(res.data.newFile))\r\n        Promise.resolve()\r\n      })\r\n      .catch(err => {\r\n        dispatch(uploadFileFail())\r\n        Promise.reject(err)\r\n      })\r\n  }\r\n}\r\n\r\n// UPDATE FILE\r\nconst updateFileBegin = () => ({\r\n  type: UPDATE_FILE_BEGIN\r\n})\r\nconst updateFileSuccess = (updatedFile) => ({\r\n  type: UPDATE_FILE_SUCCESS,\r\n  payload: { updatedFile }\r\n})\r\nconst updateFileFail = () => ({\r\n  type: UPDATE_FILE_FAIL\r\n})\r\n\r\nexport const updateFile = (fileId, newData) => {\r\n  return async dispatch => {\r\n    dispatch(updateFileBegin())\r\n    axios.patch('/files/' + fileId, { ...newData })\r\n      .then((res) => {\r\n        dispatch(updateFileSuccess(res.data.updatedFile))\r\n        Promise.resolve()\r\n      })\r\n      .catch(err => {\r\n        dispatch(updateFileFail())\r\n        Promise.reject(err)\r\n      })\r\n  }\r\n}\r\n\r\n// FETCH SINGLE FILE\r\nconst fetchSingleFileBegin = () => ({\r\n  type: FETCH_SINGLE_FILE_BEGIN\r\n})\r\nconst fetchSingleFileSuccess = (fileInfo) => ({\r\n  type: FETCH_SINGLE_FILE_SUCCESS,\r\n  payload: { fileInfo }\r\n})\r\nconst fetchSingleFileFail = () => ({\r\n  type: FETCH_SINGLE_FILE_FAIL\r\n})\r\n\r\nexport const fetchSingleFile = (fileId) => {\r\n  return async dispatch => {\r\n    dispatch(fetchSingleFileBegin())\r\n    axios.get('/files/' + fileId)\r\n      .then(res => {\r\n        dispatch(fetchSingleFileSuccess(res.data.file))\r\n        Promise.resolve()\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchSingleFileFail())\r\n        Promise.reject(err)\r\n      })\r\n  }\r\n}\r\n\r\nexport const readCache = () => {\r\n  const token = localStorage.getItem('token')\r\n  axios.defaults.headers.common['Authorization'] = 'Bearer ' + token\r\n  return {\r\n    type: READ_CACHE,\r\n    payload: {\r\n      token\r\n    }\r\n  }\r\n}\r\n\r\n// LOGIN\r\nconst loginBegin = () => ({\r\n  type: LOGIN_BEGIN\r\n})\r\nconst loginSuccess = ({ token }) => {\r\n  axios.defaults.headers.common['Authorization'] = 'Bearer ' + token\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    payload: {\r\n      token\r\n    }\r\n  }\r\n}\r\nconst loginFail = () => ({\r\n  type: LOGIN_FAIL\r\n})\r\n\r\nexport const login = (email, password) => {\r\n  return async dispatch => {\r\n    return new Promise((resolve, reject) => {\r\n      dispatch(loginBegin())\r\n      \r\n        const requestOptions = {\r\n          validateStatus: status => (\r\n            [200, 400, 500].includes(status)\r\n          )\r\n        }\r\n        axios.post('/auth/login', { email, password }, requestOptions)\r\n          .then(res => {\r\n            if (res.status === 200) {\r\n              const { token } = res.data\r\n              dispatch(loginSuccess({ token }))\r\n              resolve(res)\r\n            } else {\r\n              reject(res.data.message)\r\n              dispatch(loginFail())\r\n            }\r\n          })\r\n        .catch(err => {\r\n          console.log(err)\r\n          reject()\r\n        })\r\n    })\r\n  }\r\n}\r\n\r\nexport const logout = () => {\r\n  axios.defaults.headers.common['Authorization'] = ''\r\n  localStorage.removeItem('token');\r\n  return {\r\n    type: LOGOUT\r\n  }\r\n}\r\n\r\nconst registerBegin = () => ({\r\n  type: REGISTER_BEGIN\r\n})\r\nconst registerSuccess = () => ({\r\n  type: REGISTER_SUCCESS\r\n})\r\nconst registerFail = () => ({\r\n  type: REGISTER_FAIL\r\n})\r\n\r\nexport const register = (email, password, firstName) => dispatch => \r\n  new Promise((resolve, reject) => {\r\n    dispatch(registerBegin())\r\n\r\n    const options = {\r\n      validateStatus: status => (\r\n        [201, 500, 409, 400].includes(status)\r\n      )\r\n    }\r\n    axios.post('/auth/register', { email, password, firstName }, options)\r\n      .then(res => {\r\n        if (res.status === 201) {\r\n          dispatch(registerSuccess())\r\n          dispatch(loginSuccess({ token: res.data.token }))\r\n          resolve()\r\n        } else {\r\n          dispatch(registerFail())\r\n          reject(res.data.message ? res.data.message : 'Unknown error')\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        reject()\r\n      })\r\n})\r\n\r\nconst fetchUserInfoBegin = () =>({\r\n  type: FETCH_USER_INFO_BEGIN\r\n})\r\nconst fetchUserInfoSuccess = ({ firstName, preferences, stats }) =>({\r\n  type: FETCH_USER_INFO_SUCCESS,\r\n  payload: {\r\n    firstName,\r\n    preferences,\r\n    stats\r\n  }\r\n})\r\nconst fetchUserInfoFail = () => ({\r\n  type: FETCH_USER_INFO_FAIL\r\n})\r\n\r\nexport const fetchUserInfo = () => dispatch => \r\n  new Promise((resolve, reject) => {\r\n    dispatch(fetchUserInfoBegin())\r\n    axios.get('/users')\r\n      .then(res => {\r\n        const { firstName, preferences, stats } = res.data.user\r\n        dispatch(fetchUserInfoSuccess({ firstName, preferences, stats }))\r\n        resolve()\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        dispatch(fetchUserInfoFail())\r\n        reject()\r\n      })\r\n  })\r\n\r\nconst updateUserPreferencesBegin = () => ({\r\n  type: UPDATE_USER_PREFERENCES_BEGIN\r\n})\r\nconst updateUserPreferencesSuccess = (newPreferences) => ({\r\n  type: UPDATE_USER_PREFERENCES_SUCCESS,\r\n  payload: {\r\n    newPreferences\r\n  }\r\n})\r\nconst updateUserPreferencesFail = () => ({\r\n  type: UPDATE_USER_PREFERENCES_FAIL\r\n})\r\n\r\nexport const updateUserPreferences = (newPreferences) => dispatch => new Promise((resolve, reject) => {\r\n  dispatch(updateUserPreferencesBegin())\r\n  axios.patch('/users/preferences', newPreferences)\r\n    .then((res) =>{\r\n      dispatch(updateUserPreferencesSuccess(res.data.newPreferences))\r\n      resolve()\r\n    })\r\n    .catch(err => {\r\n      dispatch(updateUserPreferencesFail())\r\n      console.log(err)\r\n      reject()\r\n    })\r\n})","export const FETCH_FILES_BEGIN = 'FETCH_FILES_BEGIN'\r\nexport const FETCH_FILES_SUCCESS = 'FETCH_FILES_SUCCESS'\r\nexport const FETCH_FILES_FAIL = 'FETCH_FILES_FAIL'\r\n\r\nexport const DELETE_FILE_BEGIN = 'DELETE_FILE_BEGIN'\r\nexport const DELETE_FILE_SUCCESS = 'DELETE_FILE_SUCCESS'\r\nexport const DELETE_FILE_FAIL = 'DELETE_FILE_FAIL'\r\n\r\nexport const UPLOAD_FILE_BEGIN = 'UPLOAD_FILE_BEGIN'\r\nexport const UPLOAD_FILE_SUCCESS = 'UPLOAD_FILE_SUCCESS'\r\nexport const UPLOAD_FILE_FAIL = 'UPLOAD_FILE_FAIL'\r\n\r\nexport const UPDATE_FILE_BEGIN = 'UPDATE_FILE_BEGIN'\r\nexport const UPDATE_FILE_SUCCESS = 'UPDATE_FILE_SUCCESS'\r\nexport const UPDATE_FILE_FAIL = 'UPDATE_FILE_FAIL'\r\n\r\nexport const FETCH_SINGLE_FILE_BEGIN = 'FETCH_SINGLE_FILE_BEGIN'\r\nexport const FETCH_SINGLE_FILE_SUCCESS = 'FETCH_SINGLE_FILE_SUCCESS'\r\nexport const FETCH_SINGLE_FILE_FAIL = 'FETCH_SINGLE_FILE_FAIL'\r\n\r\nexport const READ_CACHE = 'READ_CACHE'\r\n\r\nexport const LOGIN_BEGIN = 'LOGIN_BEGIN'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\n\r\nexport const LOGOUT = 'LOGOUT'\r\n\r\nexport const REGISTER_BEGIN = 'REGISTER_BEGIN'\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS'\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL'\r\n\r\nexport const FETCH_USER_INFO_BEGIN = 'FETCH_USER_INFO_BEGIN'\r\nexport const FETCH_USER_INFO_SUCCESS = 'FETCH_USER_INFO_SUCCESS'\r\nexport const FETCH_USER_INFO_FAIL = 'FETCH_USER_INFO_FAIL'\r\n\r\nexport const UPDATE_USER_PREFERENCES_BEGIN = 'UPDATE_USER_PREFERENCES_BEGIN'\r\nexport const UPDATE_USER_PREFERENCES_SUCCESS = 'UPDATE_USER_PREFERENCES_SUCCESS'\r\nexport const UPDATE_USER_PREFERENCES_FAIL = 'UPDATE_USER_PREFERENCES_FAIL'","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { deleteFile, updateFile, fetchFiles } from '../../../../redux/actions'\r\n\r\nimport { Drawer,\r\n         Row,\r\n         Typography,\r\n         Input,\r\n         Popconfirm,\r\n         Icon,\r\n         Button,\r\n         message,\r\n         Form } from 'antd'\r\nconst { Paragraph } = Typography\r\n\r\nexport class FileDrawer extends Component {\r\n  static propTypes = {\r\n    fileInfo: PropTypes.object.isRequired,\r\n    visible: PropTypes.bool.isRequired,\r\n    toggleDetailsDrawer: PropTypes.func.isRequired,\r\n    \r\n    fetchFiles: PropTypes.func.isRequired,\r\n    deleteFile: PropTypes.func.isRequired,\r\n    updateFile: PropTypes.func.isRequired\r\n  }\r\n\r\n  state = {\r\n    isUploadingChanges: false,\r\n    inputValues: {\r\n      'niceName': this.props.fileInfo.niceName\r\n    },\r\n    valuesHasChanged: false\r\n  }\r\n\r\n  toggleUploadingState = () => {\r\n    this.setState(prevState => ({ isUploadingChanges: !prevState.isUploadingChanges }))\r\n  }\r\n\r\n  onInputChange = (e) => {\r\n    const { name, value } = e.target || {}\r\n    this.setState(prevState => ({\r\n      inputValues: {\r\n        ...prevState.inputValues,\r\n        [name]: value\r\n      }\r\n    }))\r\n\r\n    if(!this.state.valuesHasChanged) this.setState({ valuesHasChanged: true })\r\n  }\r\n\r\n  // redux actions\r\n  deleteFile = () => {\r\n    this.props.deleteFile(this.props.fileInfo.niceId)\r\n      .then(() => {\r\n        message.open({content: 'File removing succeed', icon: <Icon style={{ color: 'red' }} type=\"delete\" />})\r\n      })\r\n      .catch(err => {\r\n        message.error('File removing failed', 2)\r\n        console.log(err)\r\n      })\r\n  }\r\n  updateFile = (e) => {\r\n    if (e) e.preventDefault()\r\n    const newData = {\r\n      niceName: this.state.inputValues['niceName']\r\n    }\r\n    this.toggleUploadingState()\r\n    this.props.updateFile(this.props.fileInfo.niceId, newData)\r\n      .then(() => {\r\n        this.props.fetchFiles();\r\n        this.toggleUploadingState()\r\n        message.open({content: 'File update succeed', icon: <Icon style={{ color: 'green' }} type=\"save\" />})\r\n        this.props.toggleDetailsDrawer()\r\n      })\r\n      .catch(err => {\r\n        message.error('File updating failed', 2)\r\n        console.log(err)\r\n      })\r\n      \r\n    if(this.state.valuesHasChanged) this.setState({ valuesHasChanged: false })\r\n  }\r\n\r\n  render() {\r\n    const {visible, toggleDetailsDrawer} = this.props\r\n    const drawerProps = {\r\n      title: 'Edit file',\r\n      width: '25vw',\r\n      placement: 'left',\r\n      closable: true,\r\n      onClose: toggleDetailsDrawer,\r\n      visible\r\n    }\r\n\r\n    // Icons\r\n    const popconfirmIcon = (\r\n      <Icon type=\"stop\" style={{color: 'red', fontSize: 16}}/>\r\n    )\r\n    const deleteIcon = (\r\n      <Icon \r\n        className=\"FileDetailsDrawer-delete-icon\" \r\n        type=\"delete\" \r\n        style={{ fontSize: 24 }}\r\n      />\r\n    )\r\n    // Buttons\r\n    const deleteButton = (\r\n      <Popconfirm \r\n        placement=\"right\" \r\n        title=\"Are you sure?\" \r\n        onConfirm={this.deleteFile} \r\n        okType=\"danger\" \r\n        okText=\"Delete\" \r\n        cancelText=\"No\"\r\n        icon={popconfirmIcon}  \r\n      >\r\n        {deleteIcon}\r\n      </Popconfirm>\r\n    )\r\n    const saveButton = (\r\n      <Button \r\n        loading={this.state.isUploadingChanges} \r\n        onClick={this.updateFile} \r\n        type=\"primary\"\r\n        disabled={!this.state.valuesHasChanged}\r\n      >\r\n        Save\r\n        <Icon type=\"save\" />\r\n      </Button>\r\n    )\r\n\r\n    return (\r\n      <Drawer {...drawerProps}>\r\n        <Form onSubmit={this.updateFile}>\r\n          {/* Settings form */}\r\n          <Paragraph>Display name:</Paragraph>\r\n          <Input \r\n            name=\"niceName\" \r\n            size=\"large\" \r\n            value={this.state.inputValues['niceName']} \r\n            onChange={this.onInputChange}\r\n          />\r\n\r\n          {/* Form controls */}\r\n          <Row className=\"FileDetailsDrawer-buttons-container\" type=\"flex\" justify=\"space-between\">\r\n            {deleteButton}\r\n            {saveButton}\r\n          </Row>\r\n        </Form>\r\n      </Drawer>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchFiles: () => dispatch(fetchFiles()),\r\n  deleteFile: fileId => dispatch(deleteFile(fileId)),\r\n  updateFile: (fileId, newData) => dispatch(updateFile(fileId, newData))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(FileDrawer)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport { Row,\r\n         Col, \r\n         Typography, \r\n         Card, \r\n         Icon,\r\n         Progress } from 'antd'\r\nimport \"./File.scss\"\r\n\r\nimport FileDrawer from './FileDrawer'\r\n\r\nconst { Title, Paragraph, Text } = Typography\r\n\r\nexport default class File extends Component {\r\n  static propTypes = {\r\n    fileInfo: PropTypes.object.isRequired,\r\n    linkAddress: PropTypes.string.isRequired,\r\n  }\r\n\r\n  state = {\r\n    showDetailsDrawer: false,\r\n    niceNameInputValue: this.props.fileInfo.niceName,\r\n    fileInfo: this.props.fileInfo,\r\n    isUploadingChanges: false\r\n  }\r\n\r\n  toggleDetailsDrawer = (e) => {\r\n    if (e) e.preventDefault()\r\n    this.setState(prevState => ({\r\n      showDetailsDrawer: !prevState.showDetailsDrawer\r\n    }))\r\n  }\r\n\r\n  render() {\r\n\r\n    const { fileInfo } = this.props\r\n    const { niceName, pagesRead } = fileInfo\r\n    const pagesCount = this.props.fileInfo.totalPages\r\n    const readPercentage = Math.floor(pagesRead / pagesCount * 100)\r\n    const remainingPages = pagesCount - pagesRead\r\n    const pagesDailyToFinishInWeek = Math.round(remainingPages / 7)\r\n\r\n    const fileElement = (\r\n      <Row type=\"flex\" align=\"middle\" justify=\"space-between\">\r\n        <Col>\r\n          <Row type=\"flex\">\r\n            <Col>\r\n              <Progress type=\"circle\" percent={readPercentage} width={100} style={{ marginRight: 24 }} />\r\n            </Col>\r\n            <Col>\r\n              <Title style={{ color: '#3498db' }} level={4}>\r\n                { niceName }\r\n              </Title>\r\n              <Paragraph>\r\n                { pagesCount + ' pages' }\r\n              </Paragraph>\r\n                {\r\n                  remainingPages > 0 && (\r\n                    <Paragraph>\r\n                      Read <Text strong>{ pagesDailyToFinishInWeek }</Text> pages a day to finish this book in one week\r\n                    </Paragraph>\r\n                  )\r\n                }\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col>\r\n          <Icon \r\n            className=\"FileCard-more-icon\" \r\n            onClick={this.toggleDetailsDrawer} \r\n            type=\"more\" \r\n            style={{ fontSize: 32 }} \r\n          />\r\n        </Col>\r\n      </Row>\r\n    )\r\n\r\n    return (\r\n      <div>\r\n        <Col className=\"FileCard\">\r\n          <Link to={this.props.linkAddress}>\r\n            <Card hoverable>\r\n                { fileElement }\r\n            </Card>\r\n          </Link>\r\n        </Col>\r\n\r\n        <FileDrawer \r\n          fileInfo={fileInfo}\r\n          visible={this.state.showDetailsDrawer}\r\n          toggleDetailsDrawer={this.toggleDetailsDrawer}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport { fetchFiles } from '../../../redux/actions'\r\n\r\nimport { Row, message, Spin, Typography } from 'antd'\r\n\r\nimport File from './File'\r\n\r\nconst { Title } = Typography\r\n\r\nclass FilesList extends Component {\r\n  static propTypes = {\r\n    fetchFiles: PropTypes.func.isRequired,\r\n    files: PropTypes.array.isRequired,\r\n    isFetching: PropTypes.bool.isRequired,\r\n    user: PropTypes.object.isRequired\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.props.fetchFiles()\r\n      .catch(err => {\r\n        message.error('Files fetch failed')\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        {this.props.user.token ? null : <Redirect to=\"/login\" />}\r\n        <Title style={{ color: '#3498db', margin: '1em 0 0 0', fontWeight: 200 }} level={4}>\r\n          Your books:\r\n        </Title>\r\n        <Spin spinning={this.props.isFetching}>\r\n          <Row gutter={16}>\r\n            {\r\n              this.props.files.map((file) => (\r\n                <File \r\n                  key={file.niceId}\r\n                  linkAddress={'/file/' + file.niceId}\r\n                  fileInfo={file}\r\n                />\r\n              )) \r\n            }\r\n          </Row>\r\n        </Spin>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  files: state.files.allFiles,\r\n  isFetching: state.files.isFetching,\r\n  user: state.user\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchFiles: () => dispatch(fetchFiles()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilesList)","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { uploadFile } from '../../../redux/actions'\r\n\r\nimport { Upload, Icon, Spin, message } from 'antd'\r\nconst { Dragger } = Upload\r\n\r\nclass FileUpload extends Component {\r\n  static propTypes = {\r\n    uploadFile: PropTypes.func.isRequired\r\n  }\r\n  state = {\r\n    isUploading: false\r\n  }\r\n\r\n  uploadFile = ({ file }) => {\r\n    this.props.uploadFile(file)\r\n      .then(() => {\r\n        message.success('File upload succeed', 2)\r\n      })\r\n      .catch(err => {\r\n        message.error('File upload failed', 2)\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <Spin spinning={this.state.isUploading}>\r\n        <Dragger\r\n          showUploadList={false}\r\n          name=\"pdfFile\"\r\n          accept=\".pdf\"\r\n          multiple={false}\r\n          customRequest={this.uploadFile}\r\n        >\r\n          <p className=\"ant-upload-drag-icon\">\r\n            <Icon type=\"file-add\" />\r\n          </p>\r\n        </Dragger>\r\n      </Spin>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  uploadFile: file => dispatch(uploadFile(file))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(FileUpload)","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux'\r\n\r\nimport { updateUserPreferences } from '../../../redux/actions'\r\n\r\nimport {\r\n  Typography, Row, Slider, Button, Form\r\n} from 'antd'\r\nconst { Paragraph } = Typography\r\n\r\nclass UserPreferences extends Component {\r\n  static propTypes = {\r\n    preferences: PropTypes.object.isRequired,\r\n    updateUserPreferences: PropTypes.func.isRequired\r\n  }\r\n\r\n  state = {\r\n    newPreferences: this.props.preferences,\r\n    isPushing: false\r\n  }\r\n\r\n  componentDidUpdate = (prevProps) => {\r\n    if (prevProps.preferences !== this.props.preferences) {\r\n      this.setState({ newPreferences: this.props.preferences })\r\n    }\r\n  }\r\n\r\n  onChangeSlider = (property) => (newValue) => {\r\n    this.setState(prevState => ({ \r\n      newPreferences: {\r\n        ...prevState.newPreferences,\r\n        dailyGoals: {\r\n          ...prevState.newPreferences.dailyGoals,\r\n          [property]: newValue\r\n        }\r\n      } \r\n    }))\r\n  }\r\n\r\n  pushChanges = (e) => {\r\n    if (e) e.preventDefault()\r\n    if (this.state.newPreferences === this.props.preferences) return\r\n\r\n    this.setState({ isPushing: true })\r\n    this.props.updateUserPreferences(this.state.newPreferences)\r\n      .then(() => {\r\n        this.setState({ isPushing: false })\r\n      })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { pages, minutes } = this.state.newPreferences.dailyGoals\r\n    const { isPushing } = this.state\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Form onSubmit={this.pushChanges}>\r\n          <Row>\r\n            <Paragraph>\r\n              Pages to read a day\r\n            </Paragraph>\r\n            <Slider value={pages} onChange={this.onChangeSlider('pages')} max={500} step={5} />\r\n          </Row>\r\n          {/* <Row>\r\n            <Paragraph>\r\n              Minutes to read a day\r\n            </Paragraph>\r\n            <Slider value={minutes} onChange={this.onChangeSlider('minutes')} max={60} />\r\n          </Row> */}\r\n          <Row type=\"flex\" justify=\"end\">\r\n            <Button htmlType=\"submit\" type=\"primary\" loading={isPushing}>\r\n              Save\r\n            </Button>\r\n          </Row>\r\n        </Form>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  preferences: state.user.preferences\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateUserPreferences: (newPreferences) => dispatch(updateUserPreferences(newPreferences))\r\n})\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPreferences);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { logout, fetchUserInfo } from '../../../redux/actions'\r\n\r\nimport UserPreferences from './UserPreferences.jsx'\r\n\r\nimport { Typography,\r\n         Row,\r\n         Col,\r\n         Button,\r\n         Progress,\r\n         Spin } from 'antd'\r\nconst { Title, Paragraph } = Typography\r\n\r\nclass ProfileDashboard extends Component {\r\n  static propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    fetchUserInfo: PropTypes.func.isRequired,\r\n    user: PropTypes.object.isRequired\r\n  }\r\n\r\n  state = {\r\n    isLoading: true,\r\n    currentDate: ''\r\n  }\r\n\r\n  componentDidMount () {\r\n    const today = new Date()\r\n    let day = today.getDate()\r\n    day = day < 10 ? '0' + day : day\r\n    let month = today.getMonth() + 1\r\n    month = month < 10 ? '0' + month : month\r\n    const year = today.getFullYear()\r\n\r\n    const currentDate = `${day}-${month}-${year}`\r\n\r\n    this.props.fetchUserInfo()\r\n      .then(() => {\r\n        this.setState({ isLoading: false, currentDate })\r\n      })\r\n  }\r\n\r\n  render () {\r\n    const { firstName, preferences } = this.props.user\r\n    let todayPagesRead = 0\r\n    let todayMinutesRead = 0\r\n\r\n    if (this.props.user.stats[this.state.currentDate]) {\r\n      const todayStats = this.props.user.stats[this.state.currentDate]\r\n      todayPagesRead = todayStats.pages || 0\r\n      todayMinutesRead = todayStats.minutes || 0\r\n    }\r\n\r\n    const { dailyGoals } = preferences\r\n    const { isLoading } = this.state\r\n\r\n    let dailyGoalsPercentages = {\r\n      pages: Math.round(todayPagesRead / dailyGoals.pages * 100),\r\n      minutes: Math.round(todayMinutesRead / dailyGoals.minutes * 100)\r\n    }\r\n    if (dailyGoals.pages === 0) dailyGoalsPercentages.pages = 100\r\n    if (dailyGoals.minutes === 0) dailyGoalsPercentages.minutes = 100\r\n\r\n    return (\r\n      <div>\r\n        <Spin spinning={isLoading}>\r\n          <Row type=\"flex\" justify=\"space-between\">\r\n            <Col>\r\n              <Title level={3}>\r\n                Hello, {firstName}\r\n              </Title>\r\n            </Col>\r\n            <Col>\r\n              <Button type=\"link\" onClick={this.props.logout}>Log out</Button>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Title level={4} type=\"secondary\" style={{fontWeight: '200'}}>\r\n              Your daily goals\r\n            </Title>\r\n            <Row type=\"flex\" justify=\"space-around\" style={{ marginTop: '2em' }}>\r\n              <Col>\r\n                <Progress percent={dailyGoalsPercentages.pages} type=\"circle\" />\r\n                <Paragraph style={{textAlign: 'center', marginTop: \"1em\"}}>\r\n                  {todayPagesRead}{dailyGoals.pages > 0 && '/' + dailyGoals.pages} pages\r\n                </Paragraph>\r\n              </Col>\r\n              {/* <Col>\r\n                <Progress percent={dailyGoalsPercentages.minutes} type=\"circle\" />\r\n                <Paragraph style={{textAlign: 'center', marginTop: \"1em\"}}>\r\n                  {todayMinutesRead}{dailyGoals.minutes > 0 && '/' + dailyGoals.minutes} minutes\r\n                </Paragraph>\r\n              </Col> */}\r\n            </Row>\r\n          </Row>\r\n          \r\n          <UserPreferences />\r\n        </Spin>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  logout: () => dispatch(logout()),\r\n  fetchUserInfo: () => dispatch(fetchUserInfo())\r\n})\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileDashboard)","import React from 'react'\r\n\r\nimport FilesList from './FilesList'\r\nimport FileUpload from './FileUpload'\r\nimport ProfileDashboard from './ProfileDashboard'\r\n\r\nimport { Row, \r\n         Col,\r\n         Card } from 'antd'\r\n\r\nfunction LandingPage () {\r\n  return (\r\n    <Row>\r\n      <Col span={20} offset={2}>\r\n        <Card style={{ margin: '50px 0', borderRadius: '25px', boxShadow: '0 0 20px aliceblue' }}>\r\n          <Row>\r\n            <Col span={16}>\r\n              <FileUpload />\r\n              <FilesList />\r\n            </Col>\r\n            <Col span={8} style={{ paddingLeft: '2em' }}>\r\n              <ProfileDashboard />\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default LandingPage","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { fetchSingleFile, updateFile } from '../../redux/actions'\r\n\r\nimport { Icon, Tooltip } from 'antd'\r\nimport './FilePage.scss'\r\n\r\nclass FilePage extends React.Component {\r\n  static propTypes = {\r\n    match: PropTypes.object.isRequired,\r\n    file: PropTypes.object.isRequired,\r\n    fetchFile: PropTypes.func.isRequired,\r\n    updateFile: PropTypes.func.isRequired\r\n  }\r\n\r\n  state = {\r\n    fileInfo: {},\r\n    currentPage: null,\r\n    lastUpdatedCurrentPage: null,\r\n    lastPageChangeTime: new Date().getTime(),\r\n    minutesOfReading: 0\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.onMessage = this.onMessage.bind(this)\r\n  }\r\n  \r\n  componentDidMount = () => {\r\n    const niceId = this.props.match.params.id\r\n\r\n    this.props.fetchFile(niceId)\r\n    // iframe -> parent communication hack\r\n    window.addEventListener('message', this.onMessage)\r\n\r\n    setInterval(() => {\r\n      const timeNow = new Date().getTime()\r\n      if (this.state.lastPageChangeTime + 1000 * 60 * 10 > timeNow) {\r\n        this.setState( prevState => ({minutesOfReading: prevState.minutesOfReading + 1}))\r\n      }\r\n    }, 1000 * 60)\r\n  }\r\n\r\n  componentDidUpdate = (prevProps, prevState) => {\r\n    this.updateReadPagesCount()\r\n\r\n    if (prevState.lastUpdatedCurrentPage !== this.state.lastUpdatedCurrentPage) {\r\n      const timeNow = new Date().getTime()\r\n      this.setState({ lastPageChangeTime: timeNow })\r\n    }\r\n  }\r\n\r\n  updateReadPagesCount = async () => {\r\n    const didValueChange = this.state.lastUpdatedCurrentPage !== this.state.currentPage\r\n    const isValueGrater = this.state.currentPage > this.props.file.pagesRead\r\n    if (isValueGrater && didValueChange) {\r\n\r\n      const dataToUpdate = {\r\n        pagesRead: this.state.currentPage,\r\n        minutesOfReading: this.state.minutesOfReading\r\n      }\r\n      this.props.updateFile(this.props.file.niceId, dataToUpdate)\r\n        .then(() => {\r\n          this.setState({ lastUpdatedCurrentPage: this.state.currentPage, minutesOfReading: 0 })\r\n          Promise.resolve()\r\n        })\r\n        .catch(err => {\r\n          Promise.reject(err)\r\n        })\r\n    }\r\n  }\r\n  \r\n  onMessage = (e) => {\r\n    if (!isNaN(parseInt(e.data))) {\r\n      const currentPage = parseInt(e.data)\r\n      this.setState({ currentPage: currentPage })\r\n    }\r\n  }\r\n  \r\n  render = () => {\r\n\r\n    \r\n    const { path } = this.props.file\r\n    console.log(encodeURI(path))\r\n    const pagesRead = this.props.file.pagesRead\r\n    const viewerSrc = `https://127.0.0.1/public/pdfJs/web/viewer.html?file=https://127.0.0.1/${encodeURI(path)}#page=${pagesRead} `\r\n\r\n    return (\r\n      <div style={{height: '100vh', display:'flex', flexDirection:'column'}}>\r\n\r\n        <Link to=\"/\" onClick={this.updateReadPagesCount}>\r\n          <Tooltip placement=\"right\" title=\"Back to homepage\">\r\n            <div className=\"floating-back-button\">\r\n              <Icon type=\"arrow-left\" />\r\n            </div>\r\n          </Tooltip>\r\n        </Link>\r\n      \r\n        <iframe\r\n          id=\"pdfView\"\r\n          title=\"pdfViewer\"\r\n          src={viewerSrc} \r\n          width=\"100%\"\r\n          style={{border: 0, height: '100%'}}\r\n        />\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  file: state.files.singleFile\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchFile: fileId => dispatch(fetchSingleFile(fileId)),\r\n  updateFile: (fileId, newData) => dispatch(updateFile(fileId, newData))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FilePage)","import React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { login } from '../../redux/actions'\r\n\r\nimport { Row, Col, Card, Typography, Form, Input, Icon, Button, Alert } from 'antd'\r\nconst { Title, Text } = Typography\r\n\r\nclass LoginPage extends Component {\r\n  static propTypes = {\r\n    login: PropTypes.func.isRequired\r\n  }\r\n\r\n  state = {\r\n    emailValue: '',\r\n    passwordValue: '',\r\n    shouldRedirect: false,\r\n    feedbackMessage: null,\r\n    loginInProgress: false\r\n  }\r\n\r\n  submitLoginForm = (e) => {\r\n    e.preventDefault()\r\n    const { emailValue, passwordValue } = this.state\r\n    if (!emailValue || !passwordValue) {\r\n      return this.setState({ feedbackMessage: 'Fill in all form inputs' })\r\n    }\r\n\r\n    if (!emailValue.includes('@') || !emailValue.includes('.')) {\r\n      return this.setState({ feedbackMessage: 'Email incorrect' })\r\n    }\r\n\r\n    this.setState({ loginInProgress: true })\r\n    this.props.login(emailValue, passwordValue)\r\n      .then(() => {\r\n        setTimeout(() => {\r\n          this.setState({ shouldRedirect: true })\r\n        }, 2000)\r\n      })\r\n      .catch(errMessage => {\r\n        this.setState({ feedbackMessage: errMessage, loginInProgress: false })\r\n      })\r\n  }\r\n\r\n  changeInput = (e) => {\r\n    const { value, name } = e.target\r\n    this.setState({\r\n      [name + 'Value']: value\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const loginFeedback = (\r\n      <div style={{ marginBottom: '2em' }}>\r\n        { this.state.feedbackMessage && <Alert message={ this.state.feedbackMessage } type=\"error\" showIcon /> }\r\n      </div>\r\n    )\r\n\r\n    return (\r\n      <Row>\r\n        { this.state.shouldRedirect && <Redirect to=\"/\" /> }\r\n        <Col span={8} offset={8}>\r\n          <Card style={{ margin: '50px 0', borderRadius: '25px', boxShadow: '0 0 20px aliceblue' }}>\r\n            <Title level={2} style={{ textAlign: 'center' }}>Login</Title>\r\n\r\n            <Row>\r\n              <Col span={16} offset={4}>\r\n\r\n                { loginFeedback }\r\n\r\n                <Form onSubmit={this.submitLoginForm}>\r\n                  <Form.Item>\r\n                    <Input\r\n                      prefix={<Icon type=\"mail\" />}\r\n                      placeholder=\"Email\"\r\n                      name=\"email\"\r\n                      onChange={this.changeInput}\r\n                      value={this.state.emailValue}\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    <Input\r\n                      type=\"password\"\r\n                      prefix={<Icon type=\"lock\" />}\r\n                      placeholder=\"Password\"\r\n                      name=\"password\"\r\n                      onChange={this.changeInput}\r\n                      value={this.state.passwordValue}\r\n                    />\r\n                  </Form.Item>\r\n\r\n                  <Button type=\"primary\" htmlType=\"submit\" loading={this.state.loginInProgress}>Log in</Button>\r\n                  <Text style={{ margin: '0 1em' }}>or</Text>\r\n                  <Link to=\"/register\">\r\n                    <Button type=\"secondary\">Register</Button>\r\n                  </Link>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  login: (email, password) => dispatch(login(email, password))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(LoginPage)","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { register } from '../../redux/actions'\r\n\r\nimport { Row, Col, Card, Typography, Form, Input, Icon, Button, Alert } from 'antd'\r\nconst { Title, Text } = Typography\r\n\r\nclass RegisterPage extends Component {\r\n  static propTypes = {\r\n    register: PropTypes.func.isRequired\r\n  }\r\n\r\n  state = {\r\n    emailValue: '',\r\n    passwordValue: '',\r\n    passwordRepeatValue: '',\r\n    firstNameValue: '',\r\n    shouldRedirect: false,\r\n    feedbackMessage: null,\r\n    registerInProgress: false\r\n  }\r\n\r\n  submitRegisterForm = (e) => {\r\n    e.preventDefault()\r\n    const { emailValue, passwordValue, firstNameValue, passwordRepeatValue } = this.state\r\n    if (!emailValue || !passwordValue || !firstNameValue || !passwordRepeatValue) {\r\n      return this.setState({ feedbackMessage: 'Fill in all form inputs' })\r\n    }\r\n\r\n    if (passwordRepeatValue !== passwordValue) {\r\n      return this.setState({ feedbackMessage: 'Passwords are not the same'})\r\n    }\r\n\r\n    if (!emailValue.includes('@') || !emailValue.includes('.')) {\r\n      return this.setState({ feedbackMessage: 'Email incorrect' })\r\n    }\r\n\r\n    this.setState({ registerInProgress: true })\r\n    this.props.register(emailValue, passwordValue, firstNameValue)\r\n      .then(() => {\r\n        setTimeout(() => {\r\n          this.setState({ shouldRedirect: true })\r\n        }, 2000)\r\n      })\r\n      .catch(errMessage => {\r\n        this.setState({ feedbackMessage: errMessage, registerInProgress: false })\r\n      })\r\n  }\r\n\r\n  changeInput = (e) => {\r\n    const { value, name } = e.target\r\n    this.setState({\r\n      [name + 'Value']: value\r\n    })\r\n  }\r\n\r\n  render () {\r\n\r\n    const registerFeedback = (\r\n      <div style={{ marginBottom: '2em' }}>\r\n        { this.state.feedbackMessage && <Alert message={ this.state.feedbackMessage } type=\"error\" showIcon /> }\r\n      </div>\r\n    )\r\n\r\n    return (\r\n      <Row>\r\n        { this.state.shouldRedirect && <Redirect to=\"/\" /> }\r\n        <Col span={8} offset={8}>\r\n          <Card style={{ margin: '50px 0', borderRadius: '25px', boxShadow: '0 0 20px aliceblue' }}>\r\n            <Title level={2} style={{ textAlign: 'center' }}>Register</Title>\r\n\r\n            <Row>\r\n              <Col span={16} offset={4}>\r\n\r\n                { registerFeedback }\r\n\r\n                <Form onSubmit={this.submitRegisterForm}>\r\n                  <Form.Item>\r\n                    <Input \r\n                      prefix={<Icon type=\"mail\" />}\r\n                      placeholder=\"Email\"\r\n                      name=\"email\"\r\n                      onChange={this.changeInput}\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    <Input \r\n                      prefix={<Icon type=\"user\" />}\r\n                      placeholder=\"First name\"\r\n                      name=\"firstName\"\r\n                      onChange={this.changeInput}\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    <Input\r\n                      type=\"password\"\r\n                      prefix={<Icon type=\"lock\" />}\r\n                      placeholder=\"Password\"\r\n                      name=\"password\"\r\n                      onChange={this.changeInput}\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    <Input\r\n                      type=\"password\"\r\n                      prefix={<Icon type=\"lock\" />}\r\n                      placeholder=\"Confirm password\"\r\n                      name=\"passwordRepeat\"\r\n                      onChange={this.changeInput}\r\n                    />\r\n                  </Form.Item>\r\n\r\n                  <Button type=\"primary\" htmlType=\"submit\" loading={this.state.registerInProgress}>Register</Button>\r\n                  <Text style={{ margin: '0 1em' }}>or</Text>\r\n                  <Link to=\"/login\">\r\n                    <Button type=\"secondary\">Log in</Button>\r\n                  </Link>\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  register: (email, password, firstName) => dispatch(register(email, password, firstName))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterPage)","import React from 'react'\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { readCache } from './redux/actions'\r\n\r\nimport LandingPage from './components/LandingPage'\r\nimport FilePage from './components/FilePage'\r\nimport LoginPage from './components/LoginPage'\r\nimport RegisterPage from './components/RegisterPage'\r\n\r\nclass App extends React.Component {\r\n  static propTypes = {\r\n    user: PropTypes.object.isRequired,\r\n    readCache: PropTypes.func.isRequired\r\n  }\r\n\r\n  constructor (props) {\r\n    super(props)\r\n    this.props.readCache()\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <Router>\r\n        <Route path='/' exact component={LandingPage} />\r\n        <Route path='/file/:id' exact component={FilePage} />\r\n        <Route path='/login' exact component={LoginPage} />\r\n        <Route path='/register' exact component={RegisterPage} />\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.user\r\n})\r\nconst mapDispatchToProps = dispatch => ({\r\n  readCache: () => dispatch(readCache())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { FETCH_FILES_BEGIN,\r\n         FETCH_FILES_SUCCESS,\r\n         FETCH_FILES_FAIL,\r\n\r\n         DELETE_FILE_BEGIN,\r\n         DELETE_FILE_SUCCESS,\r\n         DELETE_FILE_FAIL,\r\n\r\n         UPLOAD_FILE_BEGIN,\r\n         UPLOAD_FILE_SUCCESS,\r\n         UPLOAD_FILE_FAIL,\r\n\r\n         UPDATE_FILE_BEGIN,\r\n         UPDATE_FILE_SUCCESS,\r\n         UPDATE_FILE_FAIL,\r\n\r\n         //FETCH_SINGLE_FILE_BEGIN,\r\n         FETCH_SINGLE_FILE_SUCCESS,\r\n         /*FETCH_SINGLE_FILE_FAIL*/ } from '../actionTypes'\r\n\r\nconst initialState = {\r\n  allFiles: [],\r\n  singleFile: {},\r\n  isFetching: false\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n\r\n  switch (action.type) {\r\n    case FETCH_FILES_BEGIN: {\r\n      return {\r\n        ...state,\r\n        isFetching: true\r\n      }\r\n    }\r\n    case FETCH_FILES_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        allFiles: action.payload.files.reverse(),\r\n        isFetching: false\r\n      }\r\n    }\r\n    case FETCH_FILES_FAIL: {\r\n      return {\r\n        ...state,\r\n        isFetching: false\r\n      }\r\n    }\r\n\r\n    case DELETE_FILE_BEGIN: {\r\n      return {\r\n        ...state,\r\n        isFetching: true\r\n      }\r\n    }\r\n    case DELETE_FILE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        allFiles: state.allFiles.filter(({ niceId }) => niceId !== action.payload.fileId),\r\n        isFetching: false\r\n      }\r\n    }\r\n    case DELETE_FILE_FAIL: {\r\n      return {\r\n        ...state,\r\n        isFetching: false\r\n      }\r\n    }\r\n\r\n    case UPLOAD_FILE_BEGIN: {\r\n      return {\r\n        ...state,\r\n        isFetching: true\r\n      }\r\n    }\r\n    case UPLOAD_FILE_SUCCESS: {\r\n      const { allFiles } = state\r\n      allFiles.unshift(action.payload.newFile)\r\n\r\n      return {\r\n        ...state,\r\n        allFiles,\r\n        isFetching: false\r\n      }\r\n    }\r\n    case UPLOAD_FILE_FAIL: {\r\n      return {\r\n        ...state,\r\n        isFetching: false\r\n      }\r\n    }\r\n    \r\n    case UPDATE_FILE_BEGIN: {\r\n      return {\r\n        ...state,\r\n        isFetching: true\r\n      }\r\n    }\r\n    case UPDATE_FILE_SUCCESS: {\r\n      const { updatedFile } = action.payload\r\n      const newList = state.allFiles.map((file) => {\r\n        if (file.niceId === updatedFile.niceId) {\r\n          return updatedFile\r\n        } return file\r\n      })\r\n      return {\r\n        ...state,\r\n        allFiles: newList,\r\n        isFetching: false\r\n      }\r\n    }\r\n    case UPDATE_FILE_FAIL: {\r\n      return {\r\n        ...state,\r\n        isFetching: false\r\n      }\r\n    }\r\n\r\n    case FETCH_SINGLE_FILE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        singleFile: action.payload.fileInfo\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}","import { READ_CACHE,\r\n         LOGOUT,\r\n         LOGIN_SUCCESS,\r\n         FETCH_USER_INFO_SUCCESS,\r\n         UPDATE_USER_PREFERENCES_SUCCESS } from '../actionTypes'\r\n\r\nconst initialState = {\r\n  token: '',\r\n  firstName: 'Unknown',\r\n  stats: {},\r\n  preferences: {\r\n    dailyGoals: {\r\n      pages: 0,\r\n      minutes: 0\r\n    }\r\n  }\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case READ_CACHE: {\r\n      const { token } = action.payload\r\n      localStorage.setItem('token', token)\r\n      return {\r\n        ...state,\r\n        token\r\n      }\r\n    }\r\n    case LOGIN_SUCCESS: {\r\n      const { token } = action.payload\r\n      localStorage.setItem('token', token)\r\n      return {\r\n        ...state,\r\n        token\r\n      }\r\n    }\r\n    case LOGOUT: {\r\n      localStorage.removeItem('token')\r\n      return initialState\r\n    }\r\n\r\n    case FETCH_USER_INFO_SUCCESS: {\r\n      const { firstName, preferences, stats } = action.payload\r\n      return {\r\n        ...state,\r\n        firstName,\r\n        preferences,\r\n        stats\r\n      }\r\n    }\r\n\r\n    case UPDATE_USER_PREFERENCES_SUCCESS: {\r\n      const { dailyGoals } = action.payload.newPreferences\r\n      return {\r\n        ...state,\r\n        preferences: {\r\n          dailyGoals: {\r\n            pages: dailyGoals.pages,\r\n            minutes: dailyGoals.minutes\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    default: {\r\n      return state\r\n    }\r\n  }\r\n}","import { combineReducers } from 'redux'\r\n\r\nimport files from './files'\r\nimport user from './user'\r\n\r\nexport default combineReducers({\r\n  files,\r\n  user\r\n})","import { createStore, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nexport default createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'antd/dist/antd.css'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './redux/store'\r\n\r\nconst rootElement = (\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n)\r\nReactDOM.render(rootElement, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}